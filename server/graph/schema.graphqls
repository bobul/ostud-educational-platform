type Query {
  getCourse(id: ID!): Course!
  getCourses: [Course!]!
  getTask(id: ID!): Task!
  getTasks: [Task!]!
}

type Mutation {
  createCourse(input: CreateCourseInput!): Course
  createTask(input: CreateTaskInput!): Task
  updateCourse(input: UpdateCourseInput!): Course
  updateTask(input: UpdateTaskInput!): Task
  deleteCourse(id: ID!): Course
  deleteTask(id: ID!): Task
}

input CreateCourseInput {
  title: String!
  description: String
}

input CreateTaskInput {
  title: String!
  description: String
  deadline: String
}

input UpdateCourseInput{
  _id: ID!
  title: String!
  description: String
}

input UpdateTaskInput{
  _id: ID!
  title: String!
  description: String
  deadline: String
}

type User {
  id: ID!
  role: String!
  email: String!
  name: String!
  surname: String!
  password: String!
  image: String
  registration_date: String!
  birthday_date: String
}

type Student {
  id: ID!
  class_id: ID!
}

type Class {
  id: ID!
  number: Int!
  letter: String!
  teacher_id: ID!
}

type Teacher {
  id: ID!
}

type Course {
  _id: ID!
  title: String!
  description: String
  class_id: ID!
}

type Task {
  _id: ID!
  title: String!
  description: String
  deadline: String
  course_id: ID!
}