type Query {
  getUserByEmail(email: String!) : User!
  getUserById(id: String!): User!
  getCourse(id: ID!): Course!
  getCourses: [Course!]!
  getTask(id: ID!): Task!
  getTasks: [Task!]!
  getClass(id: ID!): Class!
  getClasses: [Class!]!
}

type Mutation {
  refresh : AuthResponse
  userLogin(email: String!, password: String!) : AuthResponse
  userRegister(input: CreateUserInput!) : AuthResponse
  userLogout : Boolean!
  createCourse(input: CreateCourseInput!): Course
  createTask(input: CreateTaskInput!): Task
  createClass(input: CreateClassInput!): Class
  updateCourse(input: UpdateCourseInput!): Course
  updateTask(input: UpdateTaskInput!): Task
  updateClass(input: UpdateClassInput!): Class
  deleteCourse(id: ID!): Course
  deleteTask(id: ID!): Task
  deleteClass(id: ID!): Class
}

input CreateUserInput {
    role: String!
    email: String!
    firstName: String!
    lastName: String!
    password: String!
    dob: String
}

input CreateCourseInput {
  title: String!
  description: String
  class_id: ID!
}

input CreateTaskInput {
  title: String!
  description: String
  deadline: String
  course_id: ID!
}

input CreateClassInput {
  number: Int!
  letter: String!
  teacher_id: ID!
}

input UpdateCourseInput{
  _id: ID!
  title: String!
  description: String
}

input UpdateTaskInput{
  _id: ID!
  title: String!
  description: String
  deadline: String
}

input UpdateClassInput{
  _id: ID!
  number: Int
  letter: String
  teacher_id: ID!
}

type User {
  id: ID!
  role: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  image: String
  rd: String!
  dob: String
  activationLink: String!
  isActivate: Boolean!
}

type Student {
  id: ID!
  class_id: ID!
}

type Class {
  _id: ID!
  number: Int!
  letter: String!
  teacher_id: ID!
}

type Teacher {
  id: ID!
}

type Course {
  _id: ID!
  title: String!
  description: String
  class_id: ID!
}

type Task {
  _id: ID!
  title: String!
  description: String
  deadline: String
  course_id: ID!
}

type Token {
    accessToken: String!
    refreshToken: String!
}

type AuthResponse {
    tokens: Token!
    user: User!
}

type Session {
    userId: ID!
    refreshToken: String!
    expiresIn: Int!
}